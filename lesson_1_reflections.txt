How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I did not have to manually compare both files

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It's more time-efficient, and I can compare between versions and alternate
    between them.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    More control over saving important changes, better indications of relevant
    changes to the code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Changes can be done to multiple files to implement a feature.  A commit with
    all these files helps understand which changes were done for which purposes.

How can you use the commands git log and git diff to view the history of files?

    Find the ids to compare, do git diff between the two ids and see what changed.

How might using version control make you more confident to make changes that
could break something?

    I could revert changes whenever I encounter a problem and start anew from a working version.

Now that you have your workspace set up, what do you want to try using Git for?

    For programming assignments, for storing history of notes, for starting projects.
